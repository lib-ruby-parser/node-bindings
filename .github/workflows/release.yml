name: release
on:
  push:
    tags:
      - 'v*'

defaults:
  run:
    shell: bash

env:
  BUILD_ENV: release

jobs:
  build-node-files:
    name: build-node-files
    runs-on: ${{ matrix.build.os }}
    strategy:
      fail-fast: false
      matrix:
        build:
          - { os: ubuntu-latest,  output: linux.node  }
          - { os: macos-latest,   output: darwin.node }
          - { os: windows-latest, output: win32.node  }
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: install node
        uses: actions/setup-node@v2
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.com'

      - name: build
        run: |
          make setup
          make download-cpp-bindings
          make do-codegen

          make configure
          make build

      - name: Run tests
        run: make test

      - name: save .node file as artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.build.output }}
          path: build/Release/ruby_parser.node

  build-package:
    name: build-package
    needs: ['build-node-files']
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: install node
        uses: actions/setup-node@v2
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'

      - name: download linux artifact
        uses: actions/download-artifact@v1
        with:
          name: linux.node
          path: linux.node

      - name: download macos artifact
        uses: actions/download-artifact@v1
        with:
          name: darwin.node
          path: darwin.node

      - name: download windows artifact
        uses: actions/download-artifact@v1
        with:
          name: win32.node
          path: win32.node

      - name: do do-codegen
        run: make do-codegen

      - name: build package
        run: |
          ls -l linux.node/
          ls -l darwin.node/
          ls -l win32.node/

          cp linux.node/ruby_parser.node pkg/linux.node
          cp darwin.node/ruby_parser.node pkg/darwin.node
          cp win32.node/ruby_parser.node pkg/win32.node
          cp LICENSE pkg/
          cp README.md pkg/
          cd pkg

          npm pack
          ls -l
          mv lib-ruby-parser-*.tgz lib-ruby-parser.tgz
          ls -l

      - name: save .tgz package as artifact
        uses: actions/upload-artifact@v1
        with:
          name: lib-ruby-parser.tgz
          path: pkg/lib-ruby-parser.tgz

  test-package:
    name: test-package
    needs: ['build-package']
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        node: [ '12', '14', '16', '17', '18' ]
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: install node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          registry-url: 'https://registry.npmjs.org'

      - name: download .tgz artifact
        uses: actions/download-artifact@v1
        with:
          name: lib-ruby-parser.tgz
          path: lib-ruby-parser.tgz

      - name: test
        run: |
          ls -l
          mkdir test
          cd test
          echo "{}" > package.json
          npm install ../lib-ruby-parser.tgz/lib-ruby-parser.tgz

          node -e "console.log(require.resolve('lib-ruby-parser'))"
          node -e "console.log(require('lib-ruby-parser').parse('2 + 2', '(eval)', () => {}))"

  publish-package:
    name: publish-package
    needs: ['test-package']
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: download .tgz artifact
        uses: actions/download-artifact@v1
        with:
          name: lib-ruby-parser.tgz
          path: lib-ruby-parser.tgz

      - name: install node
        uses: actions/setup-node@v2
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'

      - name: publish
        run: npm publish $PWD/lib-ruby-parser.tgz/lib-ruby-parser.tgz
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
